#include <iostream>
#include <string>
using namespace std;

/// <summary>
/// Функция по удалению повторяющихся двоичных чисел из массива.
/// </summary>
void main() {
    setlocale(LC_ALL, "ru-RU"); // установка локального параметра русского языка для всей программы
    int n; // объявление переменной n для хранения размера массива
    char answer; // объявление переменной answer для хранения ответа пользователя
    cout << "Введите размер массива" << endl; // вывод на консоль сообщения с просьбой ввести размер массива
    cin >> n; // инициализация переменной n с введенных данных
    cout << "Создать массив из потока ввода? (y/n)" << endl; // вывод на консоль сообщения с просьбой выбрать метод создания массива
    cin >> answer; // инициализация переменной answer с введенных данных
    while (answer!='y' && answer!='n') { // цикл будет продолжаться до тех пор, пока не будет введен корректный ответ
        cout << "Введите корректный ответ (y/n)" << endl; // вывод сообщения на консоль с просьбой ввести корректный ответ
        cin >> answer; //инициализация переменной n с введенных данных
    }
    
    int *array = new int[n]; // выделение динамического массива размера n и установка на него указателя
    if (answer == 'y') { // если пользователь ввел "y", то массив заполняется из потока ввода данных
        int num; // объявление переменной для хранения введенного числа
        for (size_t i = 0; i < n; i++) { // цикл продолжается до тех пор, пока массив не будет полностью заполнен
            cout << "Введите двоичное число" << endl; // вывод сообщения на консоль с просьбой ввести двоичное число
            cin >> num; // запись данных с ввода в переменную num
            array[i] = num; // присвоение двоичного числа в массив по индексу i
        }
    }
    
    if (answer == 'n') // если пользователь ввел "n", то массив заполняется случайными двоичными числами
        for (size_t i = 0; i < n; i++) // цикл продолжается до тех пор, пока массив не будет полностью заполнен
            array[i] = rand() % 2; // присвоение случайногго двоичного числа в массив по индексу i
    
    bool *copies = new bool[n](); // выделение массива для хранения флага (о наличиии копии) для элемента по тому же индексу array
    int k = 0; // счетчик для подсчета копий
    for (size_t i = 0; i < n; i++)
        for (size_t j = i; j+1 < n; j++) // квадратичный цикл, перебирающий все элементы массива друг с другом
            if (array[i] == array[j+1]) { // если элементы одинаковы
                copies[i] = true; // флаг с тем же индексом переключается в true
                k++; // и инкрементируется счетчик
            }
    
    int *result = new int[n-k](); // выделение массива для хранения отфильтрованных значений
    int j = 0; // счетчик для переборки нового массива
    string removed; // строка для хранения значений удаленных копий
    cout << "Оставшиеся элементы массива: ";
    for (size_t i = 0; i < n; i++) // цикл продолжается до тех пор, пока не переберет все значения оригинального массива
        if (!copies[i]) { // если флаг стоит в false
            result[j] = array[i]; // в новый массив по индексу j записывается значение оригинального
            cout << to_string(result[j]) + " ";
            j++; // инкрементация счетчика
        }
        else removed += to_string(array[i]) + " ";
    
    cout << "\nУдаленные элементы массива: " + removed; // вывод на консоль удаленных элементов из массива
}